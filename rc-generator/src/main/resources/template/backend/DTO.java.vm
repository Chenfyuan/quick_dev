package ${package}.${moduleName}.model.trans;

import cc.rc.framework.core.constant.RcConstant;
import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;
import lombok.experimental.SuperBuilder;
import org.springframework.format.annotation.DateTimeFormat;

import java.io.Serializable;
import java.time.LocalDateTime;
#if(${hasBigDecimal})
import java.math.BigDecimal;
#end


/**
 * ${comments}DTO
 *
 * @author ${author}
 */
@Accessors(chain = true)
@SuperBuilder
@AllArgsConstructor
@NoArgsConstructor
@Data
public class ${className}DTO implements Serializable {

    private static final long SerialVersionUID = 1L;

    private Long id;
#foreach ($column in $columns)
#if($column.columnName != $pk.columnName
    && $column.columnName != "tenant_id"
    && $column.columnName != "revision"
    && $column.columnName != "del_flag"
    && $column.columnName != "created_by"
    && $column.columnName != "updated_by"
    && $column.columnName != "remark"
    )

#if($column.columnName == "created_at" || $column.columnName == "updated_at")
    @DateTimeFormat(pattern = RcConstant.Jackson.DATE_TIME_FORMAT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = RcConstant.Jackson.DATE_TIME_FORMAT, timezone = RcConstant.Jackson.TIME_ZONE)
#end
    private $column.attrType $column.camelAttrName;
#end
#end

}
